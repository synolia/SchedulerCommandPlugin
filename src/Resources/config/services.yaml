parameters:
    env(SYNOLIA_SCHEDULER_PLUGIN_PING_INTERVAL): 300
    env(SYNOLIA_SCHEDULER_PLUGIN_KEEP_ALIVE): true
    env(SYNOLIA_SCHEDULER_PLUGIN_LOGS_DIR): '%kernel.logs_dir%'
    env(SYNOLIA_SCHEDULER_PLUGIN_TIMEFORMAT_24H): false

services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $logsDir: '%env(string:SYNOLIA_SCHEDULER_PLUGIN_LOGS_DIR)%'
            $projectDir: '%kernel.project_dir%'
            $timeFormat24Hours: '%env(bool:SYNOLIA_SCHEDULER_PLUGIN_TIMEFORMAT_24H)%'

    Synolia\SyliusSchedulerCommandPlugin\:
        resource: '../../*'
        exclude: '../../{Entity,Migrations,SynoliaSyliusSchedulerCommandPlugin.php}'

    Synolia\SyliusSchedulerCommandPlugin\Menu\AdminMenuListener:
        tags:
            - { name: kernel.event_listener, event: sylius.menu.admin.main, method: addAdminMenuItems }

    Synolia\SyliusSchedulerCommandPlugin\Parser\CommandParser:
        arguments:
            $excludedNamespaces: ['_complete']

    app.grid_field.scheduled_command.url:
        class: Synolia\SyliusSchedulerCommandPlugin\Grid\FieldType\ScheduledCommandUrlType
        tags:
            - { name: sylius.grid_field, type: scheduled_command_url }

    app.grid_field.scheduled_command.state:
        class: Synolia\SyliusSchedulerCommandPlugin\Grid\FieldType\ScheduledCommandStateType
        tags:
            - { name: sylius.grid_field, type: scheduled_command_state }

    app.grid_field.scheduled_command.humanReadableExpression:
        class: Synolia\SyliusSchedulerCommandPlugin\Grid\FieldType\ScheduledCommandHumanReadableExpressionType
        tags:
            - { name: sylius.grid_field, type: scheduled_human_readable_expression }

    app.grid_field.scheduled_command.execution_time:
        class: Synolia\SyliusSchedulerCommandPlugin\Grid\FieldType\ScheduledCommandExecutionTimeType
        tags:
            - { name: sylius.grid_field, type: scheduled_command_execution_time }

    Synolia\SyliusSchedulerCommandPlugin\Grid\FieldType\DatetimeFieldType:
        arguments:
            $dataExtractor: '@sylius.grid.data_extractor.property_access'
        tags:
            - { name: sylius.grid_field, type: scheduled_command_executed_at }

    Synolia\SyliusSchedulerCommandPlugin\Listener\Grid\GoToHistoryButtonGridListener:
        tags:
            - { name: kernel.event_listener, event: sylius.grid.synolia_admin_commands, method: onSyliusGridAdmin }

    Synolia\SyliusSchedulerCommandPlugin\Listener\Grid\GoToCommandsButtonGridListener:
        tags:
            - { name: kernel.event_listener, event: sylius.grid.synolia_admin_scheduled_commands, method: onSyliusGridAdmin }

    Synolia\SyliusSchedulerCommandPlugin\Checker\EveryMinuteIsDueChecker:
        tags:
            - { name: !php/const Synolia\SyliusSchedulerCommandPlugin\Checker\IsDueCheckerInterface::TAG_ID }

    Synolia\SyliusSchedulerCommandPlugin\Checker\SoftLimitThresholdIsDueChecker:
        tags:
            - { name: !php/const Synolia\SyliusSchedulerCommandPlugin\Checker\IsDueCheckerInterface::TAG_ID }

    Synolia\SyliusSchedulerCommandPlugin\Voter\IsDueVoterInterface:
        class: Synolia\SyliusSchedulerCommandPlugin\Voter\IsDueVoter
        arguments:
            - !tagged_iterator { tag: !php/const Synolia\SyliusSchedulerCommandPlugin\Checker\IsDueCheckerInterface::TAG_ID }

    Synolia\SyliusSchedulerCommandPlugin\Runner\ScheduleCommandRunnerInterface:
        class: Synolia\SyliusSchedulerCommandPlugin\Runner\ScheduleCommandRunner
        bind:
            $pingInterval: '%env(int:SYNOLIA_SCHEDULER_PLUGIN_PING_INTERVAL)%'
            $keepConnectionAlive: '%env(bool:SYNOLIA_SCHEDULER_PLUGIN_KEEP_ALIVE)%'

    Synolia\SyliusSchedulerCommandPlugin\DoctrineEvent\ScheduledCommandPostRemoveEvent:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
